// Code generated by goa v3.15.2, DO NOT EDIT.
//
// ad HTTP server types
//
// Command:
// $ goa gen github.com/Frank0945/go-advertise/api/design -o api

package server

import (
	ad "github.com/Frank0945/go-advertise/api/gen/ad"
	goa "goa.design/goa/v3/pkg"
)

// CreateRequestBody is the type of the "ad" service "create" endpoint HTTP
// request body.
type CreateRequestBody struct {
	// Title of AD
	Title *string `form:"title,omitempty" json:"title,omitempty" xml:"title,omitempty"`
	// Start time of AD
	StartAt *string `form:"start_at,omitempty" json:"start_at,omitempty" xml:"start_at,omitempty"`
	// End time of AD
	EndAt *string `form:"end_at,omitempty" json:"end_at,omitempty" xml:"end_at,omitempty"`
	// Start age of target
	AgeStart *int `form:"age_start,omitempty" json:"age_start,omitempty" xml:"age_start,omitempty"`
	// End age of target
	AgeEnd *int `form:"age_end,omitempty" json:"age_end,omitempty" xml:"age_end,omitempty"`
	// Gender of target
	Gender *string `form:"gender,omitempty" json:"gender,omitempty" xml:"gender,omitempty"`
	// Country of target
	Country *string `form:"Country,omitempty" json:"Country,omitempty" xml:"Country,omitempty"`
	// Platform of target
	Platform *string `form:"platform,omitempty" json:"platform,omitempty" xml:"platform,omitempty"`
}

// ListRequestBody is the type of the "ad" service "list" endpoint HTTP request
// body.
type ListRequestBody struct {
	// Offset of AD
	Offset *int `form:"offset,omitempty" json:"offset,omitempty" xml:"offset,omitempty"`
	// Limit of AD
	Limit *int `form:"limit,omitempty" json:"limit,omitempty" xml:"limit,omitempty"`
	// Start age of target
	AgeStart *int `form:"age_start,omitempty" json:"age_start,omitempty" xml:"age_start,omitempty"`
	// End age of target
	AgeEnd *int `form:"age_end,omitempty" json:"age_end,omitempty" xml:"age_end,omitempty"`
	// Gender of target
	Gender *string `form:"gender,omitempty" json:"gender,omitempty" xml:"gender,omitempty"`
	// Country of target
	Country *string `form:"Country,omitempty" json:"Country,omitempty" xml:"Country,omitempty"`
	// Platform of target
	Platform *string `form:"platform,omitempty" json:"platform,omitempty" xml:"platform,omitempty"`
}

// ListResponseBody is the type of the "ad" service "list" endpoint HTTP
// response body.
type ListResponseBody struct {
	// Title of AD
	Title string `form:"title" json:"title" xml:"title"`
	// End time of AD
	EndAt string `form:"end_at" json:"end_at" xml:"end_at"`
}

// NewListResponseBody builds the HTTP response body from the result of the
// "list" endpoint of the "ad" service.
func NewListResponseBody(res *ad.Ads) *ListResponseBody {
	body := &ListResponseBody{
		Title: res.Title,
		EndAt: res.EndAt,
	}
	return body
}

// NewCreatePayload builds a ad service create endpoint payload.
func NewCreatePayload(body *CreateRequestBody) *ad.CreatePayload {
	v := &ad.CreatePayload{
		Title:    *body.Title,
		StartAt:  *body.StartAt,
		EndAt:    *body.EndAt,
		AgeStart: body.AgeStart,
		AgeEnd:   body.AgeEnd,
		Gender:   body.Gender,
		Country:  body.Country,
		Platform: body.Platform,
	}

	return v
}

// NewListAdSearchPayload builds a ad service list endpoint payload.
func NewListAdSearchPayload(body *ListRequestBody) *ad.AdSearchPayload {
	v := &ad.AdSearchPayload{
		Offset:   *body.Offset,
		Limit:    *body.Limit,
		AgeStart: body.AgeStart,
		AgeEnd:   body.AgeEnd,
		Gender:   body.Gender,
		Country:  body.Country,
		Platform: body.Platform,
	}

	return v
}

// ValidateCreateRequestBody runs the validations defined on CreateRequestBody
func ValidateCreateRequestBody(body *CreateRequestBody) (err error) {
	if body.Title == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("title", "body"))
	}
	if body.StartAt == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("start_at", "body"))
	}
	if body.EndAt == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("end_at", "body"))
	}
	if body.AgeStart != nil {
		if *body.AgeStart < 1 {
			err = goa.MergeErrors(err, goa.InvalidRangeError("body.age_start", *body.AgeStart, 1, true))
		}
	}
	if body.AgeEnd != nil {
		if *body.AgeEnd > 100 {
			err = goa.MergeErrors(err, goa.InvalidRangeError("body.age_end", *body.AgeEnd, 100, false))
		}
	}
	if body.Gender != nil {
		if !(*body.Gender == "M" || *body.Gender == "F") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.gender", *body.Gender, []any{"M", "F"}))
		}
	}
	if body.Country != nil {
		if !(*body.Country == "TW" || *body.Country == "JP") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.Country", *body.Country, []any{"TW", "JP"}))
		}
	}
	if body.Platform != nil {
		if !(*body.Platform == "ios" || *body.Platform == "android" || *body.Platform == "web") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.platform", *body.Platform, []any{"ios", "android", "web"}))
		}
	}
	return
}

// ValidateListRequestBody runs the validations defined on ListRequestBody
func ValidateListRequestBody(body *ListRequestBody) (err error) {
	if body.Offset == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("offset", "body"))
	}
	if body.Limit == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("limit", "body"))
	}
	if body.AgeStart != nil {
		if *body.AgeStart < 1 {
			err = goa.MergeErrors(err, goa.InvalidRangeError("body.age_start", *body.AgeStart, 1, true))
		}
	}
	if body.AgeEnd != nil {
		if *body.AgeEnd > 100 {
			err = goa.MergeErrors(err, goa.InvalidRangeError("body.age_end", *body.AgeEnd, 100, false))
		}
	}
	if body.Gender != nil {
		if !(*body.Gender == "M" || *body.Gender == "F") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.gender", *body.Gender, []any{"M", "F"}))
		}
	}
	if body.Country != nil {
		if !(*body.Country == "TW" || *body.Country == "JP") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.Country", *body.Country, []any{"TW", "JP"}))
		}
	}
	if body.Platform != nil {
		if !(*body.Platform == "ios" || *body.Platform == "android" || *body.Platform == "web") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.platform", *body.Platform, []any{"ios", "android", "web"}))
		}
	}
	return
}
