// Code generated by goa v3.15.2, DO NOT EDIT.
//
// advertise HTTP client CLI support package
//
// Command:
// $ goa gen github.com/Frank0945/go-advertise/api/design -o api

package client

import (
	"encoding/json"
	"fmt"

	advertise "github.com/Frank0945/go-advertise/api/gen/advertise"
	goa "goa.design/goa/v3/pkg"
)

// BuildCreatePayload builds the payload for the advertise create endpoint from
// CLI flags.
func BuildCreatePayload(advertiseCreateBody string) (*advertise.CreatePayload, error) {
	var err error
	var body CreateRequestBody
	{
		err = json.Unmarshal([]byte(advertiseCreateBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"Country\": \"TW\",\n      \"age_end\": 60,\n      \"age_start\": 18,\n      \"end_at\": \"2024-10-01 00:00:00\",\n      \"gender\": \"M\",\n      \"platform\": \"ios\",\n      \"start_at\": \"2024-01-01 00:00:00\",\n      \"title\": \"AD 1\"\n   }'")
		}
		if body.AgeStart != nil {
			if *body.AgeStart < 1 {
				err = goa.MergeErrors(err, goa.InvalidRangeError("body.age_start", *body.AgeStart, 1, true))
			}
		}
		if body.AgeEnd != nil {
			if *body.AgeEnd > 100 {
				err = goa.MergeErrors(err, goa.InvalidRangeError("body.age_end", *body.AgeEnd, 100, false))
			}
		}
		if body.Gender != nil {
			if !(*body.Gender == "M" || *body.Gender == "F") {
				err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.gender", *body.Gender, []any{"M", "F"}))
			}
		}
		if body.Country != nil {
			if !(*body.Country == "TW" || *body.Country == "JP") {
				err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.Country", *body.Country, []any{"TW", "JP"}))
			}
		}
		if body.Platform != nil {
			if !(*body.Platform == "ios" || *body.Platform == "android" || *body.Platform == "web") {
				err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.platform", *body.Platform, []any{"ios", "android", "web"}))
			}
		}
		if err != nil {
			return nil, err
		}
	}
	v := &advertise.CreatePayload{
		Title:    body.Title,
		StartAt:  body.StartAt,
		EndAt:    body.EndAt,
		AgeStart: body.AgeStart,
		AgeEnd:   body.AgeEnd,
		Gender:   body.Gender,
		Country:  body.Country,
		Platform: body.Platform,
	}

	return v, nil
}

// BuildListPayload builds the payload for the advertise list endpoint from CLI
// flags.
func BuildListPayload(advertiseListBody string) (*advertise.AdList, error) {
	var err error
	var body ListRequestBody
	{
		err = json.Unmarshal([]byte(advertiseListBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"Country\": \"TW\",\n      \"age_end\": 60,\n      \"age_start\": 18,\n      \"gender\": \"M\",\n      \"limit\": 10,\n      \"offset\": 0,\n      \"platform\": \"ios\"\n   }'")
		}
		if body.AgeStart != nil {
			if *body.AgeStart < 1 {
				err = goa.MergeErrors(err, goa.InvalidRangeError("body.age_start", *body.AgeStart, 1, true))
			}
		}
		if body.AgeEnd != nil {
			if *body.AgeEnd > 100 {
				err = goa.MergeErrors(err, goa.InvalidRangeError("body.age_end", *body.AgeEnd, 100, false))
			}
		}
		if body.Gender != nil {
			if !(*body.Gender == "M" || *body.Gender == "F") {
				err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.gender", *body.Gender, []any{"M", "F"}))
			}
		}
		if body.Country != nil {
			if !(*body.Country == "TW" || *body.Country == "JP") {
				err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.Country", *body.Country, []any{"TW", "JP"}))
			}
		}
		if body.Platform != nil {
			if !(*body.Platform == "ios" || *body.Platform == "android" || *body.Platform == "web") {
				err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.platform", *body.Platform, []any{"ios", "android", "web"}))
			}
		}
		if err != nil {
			return nil, err
		}
	}
	v := &advertise.AdList{
		Offset:   body.Offset,
		Limit:    body.Limit,
		AgeStart: body.AgeStart,
		AgeEnd:   body.AgeEnd,
		Gender:   body.Gender,
		Country:  body.Country,
		Platform: body.Platform,
	}

	return v, nil
}
